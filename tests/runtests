#!/usr/bin/env bash
# pass insertfile - Password Store Extension (https://www.passwordstore.org/)
# Copyright (C) 2017 HacKan <hackan@gmail.com>.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# Test units suite

#
# pass config
#
PASS="/usr/bin/pass"
export PASSWORD_STORE_ENABLE_EXTENSIONS=true
export PASSWORD_STORE_EXTENSIONS_DIR="../"
export PASSWORD_STORE_DIR="password-store"
pass() {
	${PASS} "$@"
	return $?
}
create_temp_file() {
    local tmpfile="$(mktemp -q --sufix="insf")"
    dd if=/dev/urandom of="$tmpfile" bs=100 count=$(( ( RANDOM % 10 )  + 1 ))
    echo "$tmpfile"
}
pass_init() {
	pass init "$@"
	return $?
}

#
# Color Code
#
bold=$(tput bold)
red=$(tput setaf 1)
green=$(tput setaf 2)
yellow=$(tput setaf 3)
blue=$(tput setaf 4)
reset=$(tput sgr0)

#
# Commons tools and functions
#
title() { echo "${bold}${blue}::${reset} ${bold}${*}${reset}"; }
alert() { echo " ${bold}${yellow}(*)${reset} ${*}"; }
warn() { echo " ${bold}${yellow}(*) Warning :${reset} ${*}"; }
success() { printf " ${bold}${green}(*)${reset} ${green}%s${reset}\n" "${*}"; }
error() { echo " ${bold}${red}*${reset}${bold} Error :${reset} ${*}"; }
die() { error "${@}" && exit 1; }
notice() { echo; title "${@}"; echo; }

#
# Test suite config
#
GLOBAL_RESULT=0

typeset -A results
tests=(pass-insertfile pass-insertfile-force pass-insertfile-opt)

#
# GnuPG Conf.
#
# Note: the assumption is the test keys are unencrypted.
export GNUPGHOME="gnupg/"
chmod 700 "$GNUPGHOME"
KEY1="D4C78DB7920E1E27F5416B81CC9DB947CF90C77B"
KEY2="70BD448330ACF0653645B8F2B4DDBFF0D774A374"
KEY3="62EBE74BE834C2EC71E6414595C4B715EB7D54A8"
KEY4="9378267629F989A0E96677B7976DD3D6E4691410"
KEY5="4D2AFBDE67C60F5999D143AFA6E073D439E5020C"


#
# Test Suite
#
notice "Loading test suite"
[[ -e "$PASSWORD_STORE_DIR" ]] || pass_init "$KEY1"

pass_insertfile() {
	notice "Test - Insert file"
    
    local tmpfile tmphash
	tmpfile="$(create_temp_file)"
    tmphash="$(mktemp -q --sufix="hash")"
    sha256sum "$tmpfile" > "$tmphash" 2>/dev/null
    pass insertfile test "$tmpfile"
    rm -f "$tmpfile"
    pass test > "$tmpfile"
    sha256sum -c "$tmphash"
	test $? = 0 && results[pass-insertfile]=SUCCESS
	
    notice "Test - Insert file force"
	tmpfile="$(create_temp_file)"
    tmphash="$(mktemp -q --sufix="hash")"
    sha256sum "$tmpfile" > "$tmphash" 2>/dev/null
    pass insertfile -f test "$tmpfile"
    rm -f "$tmpfile"
    pass test > "$tmpfile"
    sha256sum -c "$tmphash"
	test $? = 0 && results[pass-insertfile-force]=SUCCESS
    
	notice "Test - Bad options"
	res=0
	pass insertfile
	test $? = 1 || res=1
	pass insertfile test
	test $? = 1 || res=1
	pass insertfile --unknown-option
	test $? = 1 || res=1
	pass insertfile "$tmpfile"
	test $? = 1 || res=1
    pass insertfile sneaky "../$tmpfile"
	test $? = 1 || res=1
	test $res = 0 && results[pass-update-opt]=SUCCESS
}

pass_insertfile


#
# Units Test Results
#
notice "Test Results"
for t in ${tests[@]}; do
	res=${results[$t]:-FAIL}
	[[ "$res" == "SUCCESS" ]] || GLOBAL_RESULT=1
    success "$t  $res"
done

success "Done. You can remove temporary leftovers from $PASSWORD_STORE_DIR/"

unset PASSWORD_STORE_ENABLE_EXTENSIONS
unset PASSWORD_STORE_EXTENSIONS_DIR
unset PASSWORD_STORE_DIR
unset PASSWORD_STORE_SIGNING_KEY

[ $GLOBAL_RESULT = 0 ] && {
	success "Tests passed"
} || {
	error "Tests failed"
}

exit $GLOBAL_RESULT
